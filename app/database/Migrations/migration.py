from app.database.Migrations.route import create_routes_table, seed_routes
from app.database.Migrations.settings import create_settings_table
from app.database.Migrations.supboards import create_supboard_services_table
from app.database.Migrations.transfer import create_transfer_service
from app.utils.logger import logger
import sqlite3
from app.database.Migrations.catamaran import create_catamaran_orders_table
from app.database.Migrations.orders import create_orders_table
from app.database.Migrations.admin import create_admin_table

async def db_start():
    try:
        db = sqlite3.connect('app/storage/database.db', check_same_thread=False, timeout=7)
        cursor = db.cursor()
        logger.info("‚úÖ  –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

        seed_routes()
        logger.info("üö¢ –¢–∞–±–ª–∏—Ü–∞ route ‚Äî –≥–æ—Ç–æ–≤–∞ ")

        create_orders_table(cursor)
        logger.info("üõ∂ –¢–∞–±–ª–∏—Ü–∞ orders ‚Äî –≥–æ—Ç–æ–≤–∞")

        create_catamaran_orders_table(cursor)
        logger.info("üõ∂ –¢–∞–±–ª–∏—Ü–∞ catamaran ‚Äî –≥–æ—Ç–æ–≤–∞")

        create_supboard_services_table(cursor)
        logger.info("üõ∂ –¢–∞–±–ª–∏—Ü–∞ supboard ‚Äî –≥–æ—Ç–æ–≤–∞")

        create_transfer_service(cursor)
        logger.info("–¢–∞–±–ª–∏—Ü–∞ transfer ‚Äî –≥–æ—Ç–æ–≤–∞")

        create_settings_table(cursor)
        logger.info("üõ∂ –¢–∞–±–ª–∏—Ü–∞ settings ‚Äî –≥–æ—Ç–æ–≤–∞")

        create_admin_table(cursor)
        logger.info("üíº –¢–∞–±–ª–∏—Ü–∞ admin ‚Äî –≥–æ—Ç–æ–≤–∞")

        db.commit()
        db.close()
        logger.info("‚úÖ  –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
