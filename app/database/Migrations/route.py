import sqlite3
import itertools

from app.utils.logger import logger


def create_routes_table(cursor: sqlite3.Cursor):
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS routes (
            id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL,
            point_a TEXT NOT NULL,
            point_b TEXT NOT NULL
        )
    """)


def seed_routes():
    points = ['–£—Å—Ç—å-–£—Ç–∫–∞', '–Å–∫–≤–∞', '–°—É–ª—ë–º', '–•–∞—Ä—ë–Ω–∫–∏', '–í–µ—Ä—Ö–Ω—è—è –û—Å–ª—è–Ω–∫–∞']

    database = sqlite3.connect('app/storage/database.db')
    cursor = database.cursor()

    create_routes_table(cursor)

    pairs = list(itertools.permutations(points, 2))  # –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã, –≥–¥–µ A != B

    for point_a, point_b in pairs:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –º–∞—Ä—à—Ä—É—Ç
            cursor.execute(
                "SELECT 1 FROM routes WHERE point_a = ? AND point_b = ?",
                (point_a, point_b)
            )
            exists = cursor.fetchone()

            if not exists:
                cursor.execute(
                    "INSERT INTO routes (point_a, point_b) VALUES (?, ?)",
                    (point_a, point_b)
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞ {point_a} - {point_b}: {e}")

    database.commit()
    database.close()
    logger.info("üö¢ –í—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã")
