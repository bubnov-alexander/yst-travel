from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
import requests
import json
import time
import datetime as dt
import os

from app.database.Models.route import get_route_by_id

main = InlineKeyboardMarkup(row_width=3)
main.add(InlineKeyboardButton(text = "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑", callback_data = "add_order"),
        InlineKeyboardButton(text = "–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤", callback_data = "view_catamarans"),
        InlineKeyboardButton(text = "–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑", callback_data = "delete_order"),
        InlineKeyboardButton(text = "–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data = "edit_order"),
        InlineKeyboardButton(text = "–ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤", callback_data = "search_order"),
        InlineKeyboardButton(text = "–ü–æ–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å", callback_data = "status_order"))
main.add(InlineKeyboardButton(text = 'Excel —Ç–∞–±–ª–∏—Ü–∞', callback_data = 'excel'))

sort_orders = InlineKeyboardMarkup(row_width=1)
# sort_orders.add(InlineKeyboardButton(text = "–ü–æ –º–µ—Å—è—Ü–∞–º", callback_data = "sort_by_month"),
#         
#         InlineKeyboardButton(text = "–ü–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫–∞—Ç–∞–º–∞—Ä–∞–Ω–æ–≤", callback_data = "sort_by_quantity"),
#         InlineKeyboardButton(text = "–ü–æ —Ü–µ–Ω–µ", callback_data = "sort_by_price"),
#         InlineKeyboardButton(text = "–ü–æ –∏–º–µ–Ω–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞", callback_data = "sort_by_name"),
#         InlineKeyboardButton(text = "–ü–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞", callback_data = "sort_by_phone"),
#         InlineKeyboardButton(text = "–ü–æ ID –∑–∞–∫–∞–∑–∞", callback_data = "sort_by_id"),)

sort_orders.add(InlineKeyboardButton(text = "–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ", callback_data = "sort_date_order"),
        InlineKeyboardButton(text = "–í—ã–±–æ—Ä –∑–∞–∫–∞–∑–∞–≤ –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º –º–µ—Å—è—Ü–µ", callback_data = "sort_month_order"),
        InlineKeyboardButton(text = "–ü–æ–∏—Å–∫ –ø–æ ID", callback_data = "search_id_order"),
        InlineKeyboardButton(text = "–ü–æ–∏—Å–∫ –ø–æ –¥–∞—Ç–µ", callback_data = "search_date_order"),
        InlineKeyboardButton(text = "–°–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç –ø–æ –¥–∞—Ç–µ", callback_data = "search_free_order"),
        InlineKeyboardButton(text = "üîô–ù–∞–∑–∞–¥", callback_data = "close_callback"))

months = InlineKeyboardMarkup(row_width=3)
months.add(InlineKeyboardButton(text = "–ú–∞–π", callback_data = "sort_by_may"),
        InlineKeyboardButton(text = "–ò—é–Ω—å", callback_data = "sort_by_june"),
        InlineKeyboardButton(text = "–ò—é–ª—å", callback_data = "sort_by_july"),
        InlineKeyboardButton(text = "–ê–≤–≥—É—Å—Ç", callback_data = "sort_by_august"),
        InlineKeyboardButton(text = "–°–µ–Ω—Ç—è–±—Ä—å", callback_data = "sort_by_september"),
        InlineKeyboardButton(text = "üîô–ù–∞–∑–∞–¥", callback_data = "search_order"))

close = InlineKeyboardMarkup()
close.add(InlineKeyboardButton(text = 'üîô–ù–∞–∑–∞–¥', callback_data = 'close'))


close2 = InlineKeyboardMarkup()
close2.add(InlineKeyboardButton(text = 'üîô–ù–∞–∑–∞–¥', callback_data = 'close_callback'))

close3 = ReplyKeyboardMarkup( resize_keyboard=True, one_time_keyboard=True)
close3.add(KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å'),
        KeyboardButton(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å'))

close4 = InlineKeyboardMarkup()
close4.add(InlineKeyboardButton(text = 'üîô–ù–∞–∑–∞–¥', callback_data = 'close_callback2'))

async def generate_orders_text_and_markup(orders_page, page, total_pages, is_sorted=False, is_month=False, month_number=0):
        orders_text = ""
        for order in orders_page:
                route = get_route_by_id(order[5])
                phone = order[8].replace('https://wa.me/', '')

                orders_text += "üìù <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ</b>\n"
                orders_text += "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"
                orders_text += f"üìå <b>ID –∑–∞–∫–∞–∑–∞:</b> {order[0]}\n"
                orders_text += f"‚ö°Ô∏è <b>–î–∞—Ç–∞ –ø—Ä–∏–µ–∑–¥–∞:</b> {order[1]}\n"
                orders_text += f"‚è∞Ô∏è <b>–í—Ä–µ–º—è –ø—Ä–∏–µ–∑–¥–∞:</b> {order[2]}\n"
                orders_text += f"‚ö°Ô∏è <b>–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞:</b> {order[3]}\n"
                orders_text += f"‚è∞Ô∏è <b>–í—Ä–µ–º—è –≤—ã–µ–∑–¥–∞:</b> {order[4]}\n"
                orders_text += f"üó∫ <b>–ú–∞—Ä—à—Ä—É—Ç:</b> {route['name']}\n"
                orders_text += f"üìà <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ç–∞–º–∞—Ä–∞–Ω–æ–≤:</b> {order[6]}\n"
                orders_text += f"ü§µ <b>–§–ò–û:</b> {order[7]}\n"
                orders_text += f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b><a href='{order[8]}'> +{phone}</a>\n"
                orders_text += f"üí∞ <b>–¶–µ–Ω–∞ –∑–∞–∫–∞–∑–∞:</b> {order[9]} ‚ÇΩ\n"

                if order[10] == "" or order[10] is None or order[10] == " " or order[10] == '.':
                        orders_text += "\n"
                else:
                        orders_text +=  f"üìó <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è:</b> {order[10]}\n"
                if order[11]:
                        orders_text += "‚úÖ <b>–°—Ç–∞—Ç—É—Å:</b> –ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!\n\n"
                else:
                        orders_text += "‚ùå <b>–°—Ç–∞—Ç—É—Å:</b> –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!\n\n"
                orders_text += "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"


        markup = InlineKeyboardMarkup(row_width=2)
        buttons = []
        if page > 1:
                back_button_data = f"prev_page_{page-1}" + ("_sorted" if is_sorted else "") + (f"_month_{month_number}" if is_month else "")
                buttons.append(InlineKeyboardButton("<< –ù–∞–∑–∞–¥", callback_data=back_button_data))
        if page < total_pages:
                next_button_data = f"next_page_{page}" + ("_sorted" if is_sorted else "") + (f"_month_{month_number}" if is_month else "")
                buttons.append(InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ >>", callback_data=next_button_data))
        markup.add(*buttons)
        markup.add(InlineKeyboardButton("–ú–µ–Ω—é", callback_data="search_order"))

        return orders_text, markup

async def info_text(date_id, date_start, date_end, time_start, route, quantity, customer_name, phone_number, price, additional_wishes, status):
        if status:
                last_status = "‚úÖ –°—Ç–∞—Ç—É—Å: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!"
        else:
                last_status = "‚ùå –°—Ç–∞—Ç—É—Å: –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!"

        if additional_wishes == "" or additional_wishes is None or additional_wishes == " " or additional_wishes == '.':
                last_wishes = "\n"
        else:
                last_wishes = f"\nüìó –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è: {additional_wishes}\n"

        return (f'üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ\n'
                f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"
                f'üìåID –∑–∞–∫–∞–∑–∞: {date_id}\n'
                f'‚ö°Ô∏è –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –∑–∞–∫–∞–∑–∞: {date_start}\n'
                f'‚ö°Ô∏è –î–∞—Ç–∞ –∫–æ–Ω—Ü–∞ –∑–∞–∫–∞–∑–∞: {date_end}\n'
                f'‚è∞Ô∏è –í—Ä–µ–º—è –ø—Ä–∏–µ–∑–¥–∞: {time_start}\n'
                f'üó∫ –ú–∞—Ä—à—Ä—É—Ç: {route}\n'
                f'üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ç–∞–º–∞—Ä–∞–Ω–æ–≤: {quantity}\n'
                f'ü§µ –ò–º—è –∑–∞–∫–∞–∑—á–∏–∫–∞: {customer_name}\n'
                f'üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}\n\n'
                
                f'üí∞ –¶–µ–Ω–∞ –∑–∞–∫–∞–∑–∞: {price}—Ä\n\n'

                f'{last_wishes}\n'
                f'‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n'
                f'{last_status}\n\n')